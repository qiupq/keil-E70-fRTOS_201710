<?xml version="1.0" encoding="utf-8"?>

<package schemaVersion="1.4" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>ARM</vendor>
  <name>CMSIS-FreeRTOS</name>
  <description>Bundle of FreeRTOS for Cortex-M and Cortex-A</description>
  <url>http://www.keil.com/pack/</url>
  <license>License/license.txt</license>
    
  <releases>
    <release version="9.0.0" date="2017-03-13">
      Initial release version:
      - native FreeRTOS component (RTOS: Variant=FreeRTOS)
      - CMSIS-RTOS FreeRTOS for Cortex-M and Cortex-A9 (CMSIS:RTOS:FreeRTOS, CMSIS:RTOS2:FreeRTOS)
    </release>
  </releases>

  <requirements>
    <packages>
      <package vendor="ARM" name="CMSIS" version="5.0.1-0"/>
    </packages>
  </requirements>
  
  <conditions>
    <condition id="ARMCC">
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="GCC">
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="IAR">
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="ARMCC GCC">
      <accept Tcompiler="ARMCC"/>
      <accept Tcompiler="GCC"/>
    </condition>
    <condition id="ARMCC GCC IAR">
      <accept Tcompiler="ARMCC"/>
      <accept Tcompiler="GCC"/>
      <accept Tcompiler="IAR"/>
    </condition>
    
    <condition id="CM0">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
    </condition>
    
    <condition id="CM3">
      <description>Cortex-M3 or SC300 processor based device</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
    </condition>
    
    <condition id="CM4">
      <description>Cortex-M4 processor based device</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU"/>
    </condition>
    
    <condition id="CM4_FP">
      <description>Cortex-M4 processor based device using Floating Point Unit</description>
      <require Dcore="Cortex-M4" Dfpu="FPU"/>
    </condition>
    
    <condition id="CM7">
      <description>Cortex-M7 processor based device</description>
      <require Dcore="Cortex-M7" Dfpu="NO_FPU"/>
    </condition>
    
    <condition id="CM7_FP">
      <description>Cortex-M7 processor based device using Floating Point Unit</description>
      <accept Dcore="Cortex-M7" Dfpu="SP_FPU"/>
      <accept Dcore="Cortex-M7" Dfpu="DP_FPU"/>
    </condition>
    
    <condition id="CM7_SP">
      <description>Cortex-M7 processor based device using Floating Point Unit (SP)</description>
      <require Dcore="Cortex-M7" Dfpu="SP_FPU"/>
    </condition>
    
    <condition id="CM7_DP">
      <description>Cortex-M7 processor based device using Floating Point Unit (DP)</description>
      <require Dcore="Cortex-M7" Dfpu="DP_FPU"/>
    </condition>

    <condition id="CA9_DP">
      <description>Cortex-A9 processor based device using Floating Point Unit (DP)</description>
      <require Dcore="Cortex-A9" Dfpu="DP_FPU"/>
    </condition>

    <condition id="CoreM">
      <description>Cortex-M processor based device</description>
      <accept condition="CM0"/>
      <accept condition="CM3"/>
      <accept condition="CM4"/>
      <accept condition="CM4_FP"/>
      <accept condition="CM7"/>
      <accept condition="CM7_FP"/>
    </condition>

    <condition id="CoreA">
      <description>Cortex-A processor based device</description>
      <accept condition="CA9_DP"/>
    </condition>

    <!-- ARMCC compiler -->
    <condition id="CM0_ARMCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device for the ARM Compiler</description>
      <require condition="CM0"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM3_ARMCC">
      <description>Cortex-M3 or SC300 processor based device for the ARM Compiler</description>
      <require condition="CM3"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM4_ARMCC">
      <description>Cortex-M4 processor based device for the ARM Compiler</description>
      <require condition="CM4"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM4_FP_ARMCC">
      <description>Cortex-M4 processor based device using Floating Point Unit for the ARM Compiler</description>
      <require condition="CM4_FP"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM7_ARMCC">
      <description>Cortex-M7 processor based device for the ARM Compiler</description>
      <require condition="CM7"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM7_SP_ARMCC">
      <description>Cortex-M7 processor based device using Floating Point Unit (SP) for the ARM Compiler</description>
      <require condition="CM7_SP"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="CM7_DP_ARMCC">
      <description>Cortex-M7 processor based device using Floating Point Unit (DP) for the ARM Compiler</description>
      <require condition="CM7_DP"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CA9_DP_ARMCC">
      <description>Cortex-A9 processor based device for the ARM Compiler</description>
      <require condition="CA9_DP"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <!-- GCC compiler -->
    <condition id="CM0_GCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device for the GCC Compiler</description>
      <require condition="CM0"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM3_GCC">
      <description>Cortex-M3 or SC300 processor based device for the GCC Compiler</description>
      <require condition="CM3"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM4_GCC">
      <description>Cortex-M4 processor based device for the GCC Compiler</description>
      <require condition="CM4"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM4_FP_GCC">
      <description>Cortex-M4 processor based device using Floating Point Unit for the GCC Compiler</description>
      <require condition="CM4_FP"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM7_GCC">
      <description>Cortex-M7 processor based device for the GCC Compiler</description>
      <require condition="CM7"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM7_SP_GCC">
      <description>Cortex-M7 processor based device using Floating Point Unit (SP) for the GCC Compiler</description>
      <require condition="CM7_SP"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM7_DP_GCC">
      <description>Cortex-M7 processor based device using Floating Point Unit (DP) for the GCC Compiler</description>
      <require condition="CM7_DP"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CA9_DP_GCC">
      <description>Cortex-A9 processor based device for the GCC Compiler</description>
      <require condition="CA9_DP"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CMSIS RTOS2 FreeRTOS">
      <require Cclass="CMSIS" Cgroup="RTOS2" Csub="FreeRTOS"/>  
    </condition>

    <condition id="FreeRTOS">
      <require condition="ARMCC GCC"/>
      <require Cclass="Device" Cgroup="Startup"/>
      <require Cclass="RTOS" Cbundle="FreeRTOS" Cgroup="Config"/>
      <require Cclass="RTOS" Cbundle="FreeRTOS" Cgroup="Heap"/>
    </condition>

    <condition id="FreeRTOS Core">
      <require Cclass="RTOS" Cbundle="FreeRTOS" Cgroup="Core"/>
    </condition>

    <condition id="FreeRTOS RTOS2 Core">
      <require Cclass="RTOS" Cbundle="FreeRTOS" Cgroup="Event Groups"/>
      <require Cclass="RTOS" Cbundle="FreeRTOS" Cgroup="Timers"/>
      <require Cclass="RTOS" Cbundle="FreeRTOS" Cgroup="Core"/>
      <require Cclass="RTOS" Cbundle="FreeRTOS" Cgroup="Config" Cvariant="CMSIS RTOS2"/>
    </condition>

  </conditions>

  <components>
    <!-- CMSIS-RTOS FreeRTOS component -->
    <component Cclass="CMSIS" Cgroup="RTOS" Csub="FreeRTOS" Cversion="9.0.0" Capiversion="1.0.0" condition="FreeRTOS RTOS2 Core">
      <description>CMSIS-RTOS implementation for Cortex-M based on FreeRTOS</description>
      <RTE_Components_h>
        #define RTE_CMSIS_RTOS                  /* CMSIS-RTOS */
        #define RTE_CMSIS_RTOS_FreeRTOS         /* CMSIS-RTOS FreeRTOS */
      </RTE_Components_h>
      <files>
        <file category="header" name="CMSIS/RTOS2/FreeRTOS/Include1/cmsis_os.h"/>
        <file category="source" name="CMSIS/RTOS2/FreeRTOS/Source/cmsis_os1.c"/>
      </files>
    </component>

    <!-- CMSIS-RTOS2 FreeRTOS component -->
    <component Cclass="CMSIS" Cgroup="RTOS2" Csub="FreeRTOS" Cversion="9.0.0" Capiversion="2.1.0" condition="FreeRTOS RTOS2 Core">
      <description>CMSIS-RTOS2 implementation for Cortex-M based on FreeRTOS</description>
      <RTE_Components_h>
        #define RTE_CMSIS_RTOS2                 /* CMSIS-RTOS2 */
        #define RTE_CMSIS_RTOS2_FreeRTOS        /* CMSIS-RTOS2 FreeRTOS */
      </RTE_Components_h>
      <files>
        <file category="doc"    name="CMSIS/Documentation/General/html/index.html"/>
        <file category="source" name="CMSIS/RTOS2/FreeRTOS/Source/cmsis_os2.c"/>
        <file category="source" name="CMSIS/RTOS2/FreeRTOS/Source/ARM/clib_arm.c" condition="ARMCC"/>
      </files>
    </component>

    <bundle Cbundle="FreeRTOS" Cclass="RTOS" Cversion="9.0.0">
      <description>FreeRTOS Real Time Kernel</description>
      <doc>http://www.freertos.org/Documentation/FreeRTOS_Reference_Manual_V9.0.0.pdf</doc>
      <component Cgroup="Core" Cversion="9.0.0" condition="FreeRTOS">
        <description>Core components API (Kernel, Tasks, Semaphores, Mutexes, Queues)</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_CORE          /* RTOS FreeRTOS Core */
        </RTE_Components_h>
        <files>
          <file category="include" name="Source/include/"/>
  
          <file category="header"  name="Source/include/FreeRTOS.h"/>
          <file category="header"  name="Source/include/queue.h"/>
          <file category="header"  name="Source/include/semphr.h"/>
          <file category="header"  name="Source/include/task.h"/>
  
          <file category="source"  name="Source/list.c"/>
          <file category="source"  name="Source/queue.c"/>
          <file category="source"  name="Source/tasks.c"/>
  
          <file category="include"   condition="CM0_ARMCC"    name="Source/portable/RVDS/ARM_CM0/"/>
          <file category="source"    condition="CM0_ARMCC"    name="Source/portable/RVDS/ARM_CM0/port.c"/>
          <file category="include"   condition="CM3_ARMCC"    name="Source/portable/RVDS/ARM_CM3/"/>
          <file category="source"    condition="CM3_ARMCC"    name="Source/portable/RVDS/ARM_CM3/port.c"/>
          <file category="include"   condition="CM4_ARMCC"    name="Source/portable/RVDS/ARM_CM3/"/>
          <file category="source"    condition="CM4_ARMCC"    name="Source/portable/RVDS/ARM_CM3/port.c"/>
          <file category="include"   condition="CM4_FP_ARMCC" name="Source/portable/RVDS/ARM_CM4F/"/>
          <file category="source"    condition="CM4_FP_ARMCC" name="Source/portable/RVDS/ARM_CM4F/port.c"/>
          <file category="include"   condition="CM7_ARMCC"    name="Source/portable/RVDS/ARM_CM3/"/>
          <file category="source"    condition="CM7_ARMCC"    name="Source/portable/RVDS/ARM_CM3/port.c"/>
          <file category="include"   condition="CM7_DP_ARMCC" name="Source/portable/RVDS/ARM_CM7/r0p1/"/>
          <file category="source"    condition="CM7_DP_ARMCC" name="Source/portable/RVDS/ARM_CM7/r0p1/port.c"/>
          <file category="include"   condition="CM7_SP_ARMCC" name="Source/portable/RVDS/ARM_CM7/r0p1/"/>
          <file category="source"    condition="CM7_SP_ARMCC" name="Source/portable/RVDS/ARM_CM7/r0p1/port.c"/>
          <file category="include"   condition="CA9_DP_ARMCC" name="Source/portable/RVDS/ARM_CA9/"/>
          <file category="source"    condition="CA9_DP_ARMCC" name="Source/portable/RVDS/ARM_CA9/port.c"/>
          <file category="sourceAsm" condition="CA9_DP_ARMCC" name="Source/portable/RVDS/ARM_CA9/portASM.s"/>
  
          <file category="include"   condition="CM0_GCC"    name="Source/portable/GCC/ARM_CM0/"/>
          <file category="source"    condition="CM0_GCC"    name="Source/portable/GCC/ARM_CM0/port.c"/>
          <file category="include"   condition="CM3_GCC"    name="Source/portable/GCC/ARM_CM3/"/>
          <file category="source"    condition="CM3_GCC"    name="Source/portable/GCC/ARM_CM3/port.c"/>
          <file category="include"   condition="CM4_GCC"    name="Source/portable/GCC/ARM_CM3/"/>
          <file category="source"    condition="CM4_GCC"    name="Source/portable/GCC/ARM_CM3/port.c"/>
          <file category="include"   condition="CM4_FP_GCC" name="Source/portable/GCC/ARM_CM4F/"/>
          <file category="source"    condition="CM4_FP_GCC" name="Source/portable/GCC/ARM_CM4F/port.c"/>
          <file category="include"   condition="CM7_GCC"    name="Source/portable/GCC/ARM_CM3/"/>
          <file category="source"    condition="CM7_GCC"    name="Source/portable/GCC/ARM_CM3/port.c"/>
          <file category="include"   condition="CM7_DP_GCC" name="Source/portable/GCC/ARM_CM7/r0p1/"/>
          <file category="source"    condition="CM7_DP_GCC" name="Source/portable/GCC/ARM_CM7/r0p1/port.c"/>
          <file category="include"   condition="CM7_SP_GCC" name="Source/portable/GCC/ARM_CM7/r0p1/"/>
          <file category="source"    condition="CM7_SP_GCC" name="Source/portable/GCC/ARM_CM7/r0p1/port.c"/>
          <file category="include"   condition="CA9_DP_GCC" name="Source/portable/GCC/ARM_CA9/"/>
          <file category="source"    condition="CA9_DP_GCC" name="Source/portable/GCC/ARM_CA9/port.c"/>
          <file category="sourceAsm" condition="CA9_DP_GCC" name="Source/portable/GCC/ARM_CA9/portASM.S"/>

          <file category="header" name="CMSIS/RTOS2/FreeRTOS/Include/freertos_evr.h"/>
          <file category="source" name="CMSIS/RTOS2/FreeRTOS/Source/freertos_evr.c"/>
          <file category="other"  name="CMSIS/RTOS2/FreeRTOS/FreeRTOS.scvd"/>
        </files>
      </component>
  
      <component Cgroup="Config" Cvariant="CMSIS RTOS2" Cversion="9.0.0" condition="CMSIS RTOS2 FreeRTOS">
        <description>FreeRTOS CMSIS-RTOS2 API configuration file</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_CONFIG_RTOS2  /* RTOS FreeRTOS Config for CMSIS RTOS2 API */
        </RTE_Components_h>
        <files>
          <file category="header" attr="config" name="CMSIS/RTOS2/FreeRTOS/Config/ARMCM/FreeRTOSConfig.h" version="9.0.0" condition="CoreM"/>
          <file category="header" attr="config" name="CMSIS/RTOS2/FreeRTOS/Config/ARMCA/FreeRTOSConfig.h" version="9.0.0" condition="CoreA"/>
          
          <file category="header" attr="config" name="CMSIS/RTOS2/FreeRTOS/Config/FreeRTOS_Tick_Config.h" version="9.0.0"/>
          <file category="source" attr="config" name="CMSIS/RTOS2/FreeRTOS/Config/FreeRTOS_Tick_Config.c" version="9.0.0"/>
        </files>
      </component>
     
      <component Cgroup="Config" Cvariant="FreeRTOS" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>FreeRTOS API configuration file</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_CONFIG        /* RTOS FreeRTOS Config for FreeRTOS API */
        </RTE_Components_h>
        <files>
          <file category="header" attr="config" name="Config/ARMCM/FreeRTOSConfig.h" version="9.0.0" condition="CoreM"/>
          <file category="header" attr="config" name="Config/ARMCA/FreeRTOSConfig.h" version="9.0.0" condition="CoreA"/>
        </files>
      </component>
     
      <component Cgroup="Coroutines" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>Co-routine API</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_COROUTINE     /* RTOS FreeRTOS Co-routines */
        </RTE_Components_h>
        <files>
          <file category="header" name="Source/include/croutine.h"/>
          <file category="source" name="Source/croutine.c"/>
        </files>
      </component>
     
      <component Cgroup="Event Groups" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>Event Group API</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_EVENTGROUPS   /* RTOS FreeRTOS Event Groups */
        </RTE_Components_h>
        <files>
          <file category="header" name="Source/include/event_groups.h"/>
          <file category="source" name="Source/event_groups.c"/>
        </files>
      </component>
     
      <component Cgroup="Timers" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>Timer API</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_TIMERS        /* RTOS FreeRTOS Timers */
        </RTE_Components_h>
        <files>
          <file category="header" name="Source/include/timers.h"/>
          <file category="source" name="Source/timers.c"/>
        </files>
      </component>
     
      <component Cgroup="Heap" Cvariant="Heap_1" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>Very simple, does not permit memory to be freed.</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_HEAP_1        /* RTOS FreeRTOS Heap 1 */
        </RTE_Components_h>
        <files>
          <file category="source" name="Source/portable/MemMang/heap_1.c"/>
          <file category="doc"    name="http://www.freertos.org/a00111.html"/>
        </files>
      </component>
     
      <component Cgroup="Heap" Cvariant="Heap_2" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>Permits memory to be freed, but not does coalescence adjacent free memory blocks.</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_HEAP_2        /* RTOS FreeRTOS Heap 2 */
        </RTE_Components_h>
        <files>
          <file category="source" name="Source/portable/MemMang/heap_2.c"/>
          <file category="doc"    name="http://www.freertos.org/a00111.html"/>
        </files>
      </component>
     
      <component Cgroup="Heap" Cvariant="Heap_3" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>Wraps the standard malloc() and free() for thread safety.</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_HEAP_3        /* RTOS FreeRTOS Heap 3 */
        </RTE_Components_h>
        <files>
          <file category="source" name="Source/portable/MemMang/heap_3.c"/>
          <file category="doc"    name="http://www.freertos.org/a00111.html"/>
        </files>
      </component>
     
      <component Cgroup="Heap" Cvariant="Heap_4" Cversion="9.0.0" condition="FreeRTOS Core" isDefaultVariant="true">
        <description>Coalescences adjacent free memory blocks to avoid fragmentation. Includes absolute address placement option.</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_HEAP_4        /* RTOS FreeRTOS Heap 4 */
        </RTE_Components_h>
        <files>
          <file category="source" name="Source/portable/MemMang/heap_4.c"/>
          <file category="doc"    name="http://www.freertos.org/a00111.html"/>
        </files>
      </component>
     
      <component Cgroup="Heap" Cvariant="Heap_5" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>Same as Heap_4, with the ability to span the heap across multiple non-adjacent memory areas.</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_HEAP_5        /* RTOS FreeRTOS Heap 5 */
        </RTE_Components_h>
        <files>
          <file category="source" name="Source/portable/MemMang/heap_5.c"/>
          <file category="doc"    name="http://www.freertos.org/a00111.html"/>
        </files>
      </component>
	  
     <component Cgroup="FreeRTOS-Plus-Common" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>FreeRTOS-Plus-Common :FAT function ;TCP function...</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_PLUS_COMMON        /* RTOS FreeRTOS PLUS COMMON */
        </RTE_Components_h>
        <files>
			<file category="include" name="Utilities/include"/>
			<file category="header"  name="Utilities/include/date_and_time.h"/>
			<file category="header"  name="Utilities/include/UDPLoggingPrintf.h"/>
			<file category="source"  name="Utilities/date_and_time.c"/> 
			<file category="source"  name="Utilities/printf-stdarg.c"/> 
			<file category="source"  name="Utilities/UDPLoggingPrintf.c"/> 
       </files>
     </component>
	 
	 <component Cgroup="FreeRTOS-Plus-CLI" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>FreeRTOS-Plus Command Line </description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_PLUS_CLI        /* RTOS FreeRTOS PLUS CLI */
        </RTE_Components_h>
        <files>
			<file category="header"  name="FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"/>
			<file category="source"  name="FreeRTOS-Plus-CLI/FreeRTOS_CLI.c"/> 
       </files>
      </component>
	 
	 <component Cgroup="FreeRTOS-Plus-TCP-BASE" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>FreeRTOS Plus TCP-BASE </description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_PLUS_TCP_BASE        /* RTOS FreeRTOS PLUS TCP-BASE */
        </RTE_Components_h>
        <files>
			<file category="include" name="FreeRTOS-Plus-TCP/include/"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOSIPConfigDefaults.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_IP_Private.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_UDP_IP.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_ARP.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_Sockets.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_errno_TCP.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_DHCP.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/IPTraceMacroDefaults.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_DNS.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_TCP_IP.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/NetworkBufferManagement.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/FreeRTOS_TCP_WIN.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/include/NetworkInterface.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/portable/Compiler/GCC/pack_struct_end.h"/>
			<file category="header"  name="FreeRTOS-Plus-TCP/portable/Compiler/GCC/pack_struct_start.h"/>		<file category="header"  name="FreeRTOS-Plus-TCP/protocols/include/FreeRTOS_TCP_server.h"/>			<file category="header"  name="FreeRTOS-Plus-TCP/include/hr_gettime.h"/>					
			

			<file category="source"  name="FreeRTOS-Plus-TCP/portable/BufferManagement/BufferAllocation_2.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_ARP.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_UDP_IP.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_Stream_Buffer.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_DNS.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_TCP_IP.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_IP.c"/>
			<file category="source"  name="FreeRTOS-Plus-TCP/FreeRTOS_TCP_WIN.c"/>
       </files>
      </component>
	  
	  <component Cgroup="FreeRTOS-FAT" Cversion="9.0.0" condition="FreeRTOS Core">
        <description>FreeRTOS+FAT Provides file-system interfaces for the FAT file-system.</description>
        <RTE_Components_h>
          #define RTE_RTOS_FreeRTOS_FAT        /* RTOS FreeRTOS FAT */
        </RTE_Components_h>
        <files>
			<file category="include" name="FAT/include/"/>
			<file category="header"  name="FAT/include/FreeRTOSFATConfigDefaults.h"/>
			<file category="header"  name="FAT/include/ff_error.h"/>
			<file category="header"  name="FAT/include/ff_headers.h"/>
			<file category="header"  name="FAT/include/ff_stdio.h"/>
			<file category="header"  name="FAT/include/FreeRTOS_errno_FAT.h"/>
			<file category="header"  name="FAT/include/ff_fat.h"/>
			<file category="header"  name="FAT/include/ff_ioman.h"/>
			<file category="header"  name="FAT/include/ff_string.h"/>
			<file category="header"  name="FAT/include/ff_crc.h"/>
			<file category="header"  name="FAT/include/ff_fatdef.h"/>
			<file category="header"  name="FAT/include/ff_locking.h"/>
			<file category="header"  name="FAT/include/ff_sys.h"/>
			<file category="header"  name="FAT/include/ff_devices.h"/>
			<file category="header"  name="FAT/include/ff_file.h"/>
			<file category="header"  name="FAT/include/ff_memory.h"/>
			<file category="header"  name="FAT/include/ff_time.h"/>
			<file category="header"  name="FAT/include/ff_dir.h"/>
			<file category="header"  name="FAT/include/ff_format.h"/>
			<file category="header"  name="FAT/include/ff_old_config_defines.h"/>
			<file category="source"  name="FAT/ff_dir.c"/>
			<file category="source"  name="FAT/ff_format.c"/>
			<file category="source"  name="FAT/ff_stdio.c"/>
			<file category="source"  name="FAT/ff_error.c"/>
			<file category="source"  name="FAT/ff_ioman.c"/>
			<file category="source"  name="FAT/ff_string.c"/>
			<file category="source"  name="FAT/ff_crc.c"/>
			<file category="source"  name="FAT/ff_fat.c"/>
			<file category="source"  name="FAT/ff_locking.c"/>
			<file category="source"  name="FAT/ff_sys.c"/>
			<!-- <file category="source"  name="FAT/ff_dev_support.c"/> -->
			<file category="source"  name="FAT/ff_file.c"/>
			<file category="source"  name="FAT/ff_memory.c"/>
			<file category="source"  name="FAT/ff_time.c"/>		
        </files>
      </component>
	  
    </bundle>
  </components>

  <examples>
    <example name="CMSIS-RTOS2 FreeRTOS Blinky" doc="Abstract.txt" folder="CMSIS/RTOS2/FreeRTOS/Examples/Blinky">
      <description>CMSIS-RTOS2 Blinky example using FreeRTOS</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>
    <example name="Native FreeRTOS Blinky" doc="Abstract.txt" folder="CMSIS/RTOS2/FreeRTOS/Examples/Native_Blinky">
      <description>Blinky example using FreeRTOS natively</description>
      <board name="uVision Simulator" vendor="Keil"/>
      <project>
        <environment name="uv" load="Blinky.uvprojx"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>

    <example name="CMSIS-RTOS2 FreeRTOS Blinky CA9 FVP" doc="Abstract.txt" folder="CMSIS/RTOS2/FreeRTOS/Examples/Blinky_CA9">
      <description>CMSIS-RTOS2 Blinky example using FreeRTOS for Cortex-A9</description>
      <board name="ARM Fixed Virtual Platform" vendor="ARM"/>
      <project>
        <environment name="ds5" load=".project"/>
      </project>
      <attributes>
        <component Cclass="CMSIS" Cgroup="CORE"/>
        <component Cclass="CMSIS" Cgroup="RTOS2"/>
        <component Cclass="Device" Cgroup="Startup"/>
        <category>Getting Started</category>
      </attributes>
    </example>
  </examples>
</package>
